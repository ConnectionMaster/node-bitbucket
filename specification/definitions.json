{
  "paginated_files": {
    "type": "object",
    "description": "A paginated list of commit_file objects.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/commit_file"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_repository_permissions": {
    "type": "object",
    "description": "A paginated list of repository permissions.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/repository_permission"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pipeline_image": {
    "type": "object",
    "description": "The definition of a Docker image that can be used for a Bitbucket Pipelines step execution context.",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the image. If the image is hosted on DockerHub the short name can be used, otherwise the fully qualified name is required here."
      },
      "username": {
        "type": "string",
        "description": "The username needed to authenticate with the Docker registry. Only required when using a private Docker image."
      },
      "password": {
        "type": "string",
        "description": "The password needed to authenticate with the Docker registry. Only required when using a private Docker image."
      },
      "email": {
        "type": "string",
        "description": "The email needed to authenticate with the Docker registry. Only required when using a private Docker image."
      }
    }
  },
  "pipeline_ref_target": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_target"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines reference target.",
        "properties": {
          "ref_type": {
            "enum": [
              "branch",
              "tag",
              "named_branch",
              "bookmark"
            ],
            "type": "string",
            "description": "The type of reference (branch/tag)."
          },
          "ref_name": {
            "type": "string",
            "description": "The name of the reference."
          },
          "commit": {
            "$ref": "#/definitions/commit"
          },
          "selector": {
            "$ref": "#/definitions/pipeline_selector"
          }
        }
      }
    ]
  },
  "paginated_repositories": {
    "type": "object",
    "description": "A paginated list of repositories.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/repository"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "subject_types": {
    "type": "object",
    "description": "The mapping of resource/subject types pointing to their individual event types.",
    "properties": {
      "repository": {
        "type": "object",
        "properties": {
          "events": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "user": {
        "type": "object",
        "properties": {
          "events": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "team": {
        "type": "object",
        "properties": {
          "events": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    "additionalProperties": false
  },
  "pipeline_state_completed_expired": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines EXPIRED pipeline result.",
        "properties": {
          "name": {
            "enum": [
              "EXPIRED"
            ],
            "type": "string",
            "description": "The name of the stopped result (EXPIRED)."
          }
        }
      }
    ]
  },
  "paginated_projects": {
    "type": "object",
    "description": "A paginated list of projects",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/project"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pullrequest_merge_parameters": {
    "type": "object",
    "description": "The metadata that describes a pull request merge.",
    "properties": {
      "type": {
        "type": "string"
      },
      "message": {
        "type": "string",
        "description": "The commit message that will be used on the resulting commit."
      },
      "close_source_branch": {
        "type": "boolean",
        "description": "Whether the source branch should be deleted. If this is not provided, we fallback to the value used when the pull request was created, which defaults to False"
      },
      "merge_strategy": {
        "type": "string",
        "description": "The merge strategy that will be used to merge the pull request.",
        "enum": [
          "merge_commit",
          "squash",
          "fast_forward"
        ],
        "default": "merge_commit"
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "pipeline_step_state_pending": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines PENDING pipeline step state.",
        "properties": {
          "name": {
            "enum": [
              "PENDING"
            ],
            "type": "string",
            "description": "The name of pipeline step state (PENDING)."
          }
        }
      }
    ]
  },
  "group": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A group object",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "owner": {
            "$ref": "#/definitions/account"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string",
            "description": "The \"sluggified\" version of the group's name. This contains only ASCII\ncharacters and can therefore be slightly different than the name"
          },
          "full_slug": {
            "type": "string",
            "description": "The concatenation of the owner's username and the group's slug,\nseparated with a colon (e.g. `acme:developers`)\n"
          },
          "members": {
            "type": "integer",
            "description": "The number of members in this group"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_milestones": {
    "type": "object",
    "description": "A paginated list of issue tracker milestones.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/milestone"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_pipeline_variables": {
    "type": "object",
    "description": "A paged list of variables.",
    "properties": {
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses."
      },
      "values": {
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/pipeline_variable"
        },
        "description": "The values of the current page."
      },
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute."
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values."
      },
      "next": {
        "type": "string",
        "format": "uri",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs."
      },
      "previous": {
        "type": "string",
        "format": "uri",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs."
      }
    }
  },
  "pipeline_commit_target": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_target"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines commit target.",
        "properties": {
          "commit": {
            "$ref": "#/definitions/commit"
          },
          "selector": {
            "$ref": "#/definitions/pipeline_selector"
          }
        }
      }
    ]
  },
  "pipeline_schedule_execution_executed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_schedule_execution"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines executed schedule execution.",
        "properties": {
          "pipeline": {
            "$ref": "#/definitions/pipeline",
            "description": "The pipeline that was triggered by this execution of a schedule."
          }
        }
      }
    ]
  },
  "pipeline": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipeline. This represents an actual pipeline result.",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The UUID identifying the pipeline."
          },
          "build_number": {
            "type": "integer",
            "description": "The build number of the pipeline."
          },
          "creator": {
            "$ref": "#/definitions/account",
            "description": "The Bitbucket account that was used to create the pipeline."
          },
          "repository": {
            "$ref": "#/definitions/repository"
          },
          "target": {
            "$ref": "#/definitions/pipeline_target",
            "description": "The target that the pipeline built."
          },
          "trigger": {
            "$ref": "#/definitions/pipeline_trigger",
            "description": "The trigger used for the pipeline."
          },
          "state": {
            "$ref": "#/definitions/pipeline_state"
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the pipeline was created."
          },
          "completed_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the Pipeline was completed. This is not set if the pipeline is still in progress."
          },
          "build_seconds_used": {
            "type": "integer",
            "description": "The number of build seconds used by this pipeline."
          }
        }
      }
    ]
  },
  "search_segment": {
    "type": "object",
    "properties": {
      "text": {
        "type": "string",
        "readOnly": true
      },
      "match": {
        "type": "boolean",
        "readOnly": true
      }
    }
  },
  "pipeline_ssh_public_key": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines known host public key.",
        "properties": {
          "key_type": {
            "type": "string",
            "description": "The type of the public key."
          },
          "key": {
            "type": "string",
            "description": "The base64 encoded public key."
          },
          "md5_fingerprint": {
            "type": "string",
            "description": "The MD5 fingerprint of the public key."
          },
          "sha256_fingerprint": {
            "type": "string",
            "description": "The SHA-256 fingerprint of the public key."
          }
        }
      }
    ]
  },
  "paginated_pipeline_steps": {
    "type": "object",
    "description": "A paged list of pipeline steps.",
    "properties": {
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses."
      },
      "values": {
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/pipeline_step"
        },
        "description": "The values of the current page."
      },
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute."
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values."
      },
      "next": {
        "type": "string",
        "format": "uri",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs."
      },
      "previous": {
        "type": "string",
        "format": "uri",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs."
      }
    }
  },
  "paginated_team_permissions": {
    "type": "object",
    "description": "A paginated list of team permissions.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/team_permission"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_treeentries": {
    "type": "object",
    "description": "A paginated list of commit_file and/or commit_directory objects.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/treeentry"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "milestone": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A milestone as defined in a repository's issue tracker.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_step_state_completed_error": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines ERROR pipeline step result.",
        "properties": {
          "name": {
            "enum": [
              "ERROR"
            ],
            "type": "string",
            "description": "The name of the result (ERROR)"
          },
          "error": {
            "$ref": "#/definitions/pipeline_step_error",
            "description": "An error result of a completed state of a Bitbucket Pipeline step."
          }
        }
      }
    ]
  },
  "pipeline_step_state_completed_failed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines FAILED pipeline step result.",
        "properties": {
          "name": {
            "enum": [
              "FAILED"
            ],
            "type": "string",
            "description": "The name of the result (FAILED)"
          }
        }
      }
    ]
  },
  "commit_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/comment"
      },
      {
        "type": "object",
        "description": "A commit comment.",
        "properties": {
          "commit": {
            "$ref": "#/definitions/commit"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "ref": {
    "type": "object",
    "description": "A ref object, representing a branch or tag in a repository.",
    "properties": {
      "type": {
        "type": "string"
      },
      "links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "commits": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "html": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "name": {
        "type": "string",
        "description": "The name of the ref."
      },
      "target": {
        "$ref": "#/definitions/commit"
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "pullrequest": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A pull request object.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "commits": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "approve": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "diff": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "comments": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "activity": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "merge": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "decline": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "description": "The pull request's unique ID. Note that pull request IDs are only unique within their associated repository."
          },
          "title": {
            "type": "string",
            "description": "Title of the pull request."
          },
          "summary": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "string",
                "description": "The text as it was typed by a user."
              },
              "markup": {
                "type": "string",
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ]
              },
              "html": {
                "type": "string",
                "description": "The user's content rendered as HTML."
              }
            },
            "additionalProperties": false
          },
          "state": {
            "type": "string",
            "description": "The pull request's current status.",
            "enum": [
              "MERGED",
              "SUPERSEDED",
              "OPEN",
              "DECLINED"
            ]
          },
          "author": {
            "$ref": "#/definitions/account"
          },
          "source": {
            "$ref": "#/definitions/pullrequest_endpoint"
          },
          "destination": {
            "$ref": "#/definitions/pullrequest_endpoint"
          },
          "merge_commit": {
            "type": "object",
            "properties": {
              "hash": {
                "type": "string",
                "pattern": "[0-9a-f]{7,}?"
              }
            },
            "additionalProperties": false
          },
          "comment_count": {
            "type": "integer",
            "description": "The number of comments for a specific pull request.",
            "minimum": 0
          },
          "task_count": {
            "type": "integer",
            "description": "The number of open tasks for a specific pull request.",
            "minimum": 0
          },
          "close_source_branch": {
            "type": "boolean",
            "description": "A boolean flag indicating if merging the pull request closes the source branch."
          },
          "closed_by": {
            "$ref": "#/definitions/account"
          },
          "reason": {
            "type": "string",
            "description": "Explains why a pull request was declined. This field is only applicable to pull requests in rejected state."
          },
          "created_on": {
            "type": "string",
            "description": "The ISO8601 timestamp the request was created.",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "description": "The ISO8601 timestamp the request was last updated.",
            "format": "date-time"
          },
          "reviewers": {
            "type": "array",
            "description": "The list of users that were added as reviewers on this pull request when it was created. For performance reasons, the API only includes this list on a pull request's `self` URL.",
            "items": {
              "$ref": "#/definitions/account"
            }
          },
          "participants": {
            "type": "array",
            "description": "        The list of users that are collaborating on this pull request.\n        Collaborators are user that:\n\n        * are added to the pull request as a reviewer (part of the reviewers\n          list)\n        * are not explicit reviewers, but have commented on the pull request\n        * are not explicit reviewers, but have approved the pull request\n\n        Each user is wrapped in an object that indicates the user's role and\n        whether they have approved the pull request. For performance reasons,\n        the API only returns this list when an API requests a pull request by\n        id.\n        ",
            "items": {
              "$ref": "#/definitions/participant"
            }
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "issue_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/comment"
      },
      {
        "type": "object",
        "description": "A issue comment.",
        "properties": {
          "issue": {
            "$ref": "#/definitions/issue"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipelines_config": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "The Pipelines configuration for a repository.",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Whether Pipelines is enabled for the repository."
          },
          "repository": {
            "$ref": "#/definitions/repository"
          }
        }
      }
    ]
  },
  "team": {
    "allOf": [
      {
        "$ref": "#/definitions/account"
      },
      {
        "type": "object",
        "description": "A team object.",
        "properties": {},
        "additionalProperties": true
      }
    ]
  },
  "paginated_snippets": {
    "type": "object",
    "description": "A paginated list of snippets.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/snippet"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "page": {
    "type": "object",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      }
    },
    "additionalProperties": false
  },
  "pipeline_state_in_progress_stage": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A result of an in progress pipeline state.",
        "properties": {}
      }
    ]
  },
  "pipeline_step_state_ready": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines READY pipeline step state.",
        "properties": {
          "name": {
            "enum": [
              "READY"
            ],
            "type": "string",
            "description": "The name of pipeline step state (READY)."
          }
        }
      }
    ]
  },
  "paginated_issue_comments": {
    "type": "object",
    "description": "A paginated list of issue comments.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/issue_comment"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "search_result_page": {
    "type": "object",
    "properties": {
      "size": {
        "type": "integer",
        "format": "int64",
        "readOnly": true
      },
      "page": {
        "type": "integer",
        "format": "int32",
        "readOnly": true
      },
      "pagelen": {
        "type": "integer",
        "format": "int32",
        "readOnly": true
      },
      "query_substituted": {
        "type": "boolean",
        "readOnly": true
      },
      "next": {
        "type": "string",
        "format": "uri",
        "readOnly": true
      },
      "previous": {
        "type": "string",
        "format": "uri",
        "readOnly": true
      },
      "values": {
        "type": "array",
        "readOnly": true,
        "items": {
          "$ref": "#/definitions/search_code_search_result"
        }
      }
    }
  },
  "pipeline_state_completed_stopped": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines STOPPED pipeline result.",
        "properties": {
          "name": {
            "enum": [
              "STOPPED"
            ],
            "type": "string",
            "description": "The name of the stopped result (STOPPED)."
          }
        }
      }
    ]
  },
  "pipeline_state_completed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines COMPLETED pipeline state.",
        "properties": {
          "name": {
            "enum": [
              "COMPLETED"
            ],
            "type": "string",
            "description": "The name of pipeline state (COMPLETED)."
          },
          "result": {
            "$ref": "#/definitions/pipeline_state_completed_result",
            "description": "A result of a completed state of a pipeline."
          }
        }
      }
    ]
  },
  "paginated_ssh_user_keys": {
    "type": "object",
    "description": "A paginated list of SSH keys.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ssh_account_key"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pipeline_schedule_execution_errored": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_schedule_execution"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines schedule execution that failed to be executed.",
        "properties": {
          "error": {
            "$ref": "#/definitions/pipeline_error",
            "description": "The error that caused the execution to fail."
          }
        }
      }
    ]
  },
  "team_permission": {
    "type": "object",
    "description": "A user's permission for a given team.",
    "properties": {
      "type": {
        "type": "string"
      },
      "permission": {
        "type": "string",
        "enum": [
          "admin",
          "collaborator"
        ]
      },
      "user": {
        "$ref": "#/definitions/user"
      },
      "team": {
        "$ref": "#/definitions/team"
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "paginated_log_entries": {
    "type": "object",
    "description": "A paginated list of issue changes.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/issue_change"
        },
        "minItems": 0
      }
    },
    "additionalProperties": false
  },
  "paginated_snippet_comments": {
    "type": "object",
    "description": "A paginated list of snippet comments.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/snippet_comment"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "version": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A version as defined in a repository's issue tracker.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_branches": {
    "type": "object",
    "description": "A paginated list of branches.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/branch"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_commit_comments": {
    "type": "object",
    "description": "A paginated list of commit comments.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/commit_comment"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "issue": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "An issue.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "comments": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "attachments": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "watch": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "vote": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "id": {
            "type": "integer"
          },
          "repository": {
            "$ref": "#/definitions/repository"
          },
          "title": {
            "type": "string"
          },
          "reporter": {
            "$ref": "#/definitions/user"
          },
          "assignee": {
            "$ref": "#/definitions/user"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time"
          },
          "edited_on": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "enum": [
              "new",
              "open",
              "resolved",
              "on hold",
              "invalid",
              "duplicate",
              "wontfix",
              "closed"
            ]
          },
          "kind": {
            "type": "string",
            "enum": [
              "bug",
              "enhancement",
              "proposal",
              "task"
            ]
          },
          "priority": {
            "type": "string",
            "enum": [
              "trivial",
              "minor",
              "major",
              "critical",
              "blocker"
            ]
          },
          "milestone": {
            "$ref": "#/definitions/milestone"
          },
          "version": {
            "$ref": "#/definitions/version"
          },
          "component": {
            "$ref": "#/definitions/component"
          },
          "votes": {
            "type": "integer"
          },
          "content": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "string",
                "description": "The text as it was typed by a user."
              },
              "markup": {
                "type": "string",
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ]
              },
              "html": {
                "type": "string",
                "description": "The user's content rendered as HTML."
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "webhook_subscription": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A Webhook subscription.",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The webhook's id"
          },
          "url": {
            "type": "string",
            "description": "The URL events get delivered to.",
            "format": "uri"
          },
          "description": {
            "type": "string",
            "description": "A user-defined description of the webhook."
          },
          "subject_type": {
            "type": "string",
            "description": "The type of entity, which is `repository` in the case of webhook subscriptions on repositories.",
            "enum": [
              "user",
              "repository",
              "team"
            ]
          },
          "subject": {
            "$ref": "#/definitions/object"
          },
          "active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "events": {
            "type": "array",
            "description": "The events this webhook is subscribed to.",
            "items": {
              "type": "string",
              "enum": [
                "pullrequest:unapproved",
                "issue:comment_created",
                "pullrequest:approved",
                "repo:created",
                "repo:deleted",
                "repo:imported",
                "pullrequest:comment_updated",
                "issue:updated",
                "project:updated",
                "pullrequest:comment_created",
                "repo:commit_status_updated",
                "pullrequest:updated",
                "issue:created",
                "repo:fork",
                "pullrequest:comment_deleted",
                "repo:commit_status_created",
                "repo:updated",
                "pullrequest:rejected",
                "pullrequest:fulfilled",
                "repo:push",
                "pullrequest:created",
                "repo:transfer",
                "repo:commit_comment_created"
              ]
            },
            "minItems": 1,
            "uniqueItems": true
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_variable": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines variable.",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The UUID identifying the variable."
          },
          "key": {
            "type": "string",
            "description": "The unique name of the variable."
          },
          "value": {
            "type": "string",
            "description": "The value of the variable. If the variable is secured, this will be empty."
          },
          "secured": {
            "type": "boolean",
            "description": "If true, this variable will be treated as secured. The value will never be exposed in the logs or the REST API."
          }
        }
      }
    ]
  },
  "repository": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A Bitbucket repository.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "pullrequests": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "commits": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "forks": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "watchers": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "downloads": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "clone": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "href": {
                      "type": "string",
                      "format": "uri"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "hooks": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "uuid": {
            "type": "string",
            "description": "The repository's immutable id. This can be used as a substitute for the slug segment in URLs. Doing this guarantees your URLs will survive renaming of the repository by its owner, or even transfer of the repository to a different user."
          },
          "full_name": {
            "type": "string",
            "description": "The concatenation of the repository owner's username and the slugified name, e.g. \"evzijst/interruptingcow\". This is the same string used in Bitbucket URLs."
          },
          "is_private": {
            "type": "boolean"
          },
          "parent": {
            "$ref": "#/definitions/repository"
          },
          "scm": {
            "type": "string",
            "enum": [
              "hg",
              "git"
            ]
          },
          "owner": {
            "$ref": "#/definitions/account"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time"
          },
          "size": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "fork_policy": {
            "type": "string",
            "description": "\nControls the rules for forking this repository.\n\n* **allow_forks**: unrestricted forking\n* **no_public_forks**: restrict forking to private forks (forks cannot\n  be made public later)\n* **no_forks**: deny all forking\n",
            "enum": [
              "allow_forks",
              "no_public_forks",
              "no_forks"
            ]
          },
          "project": {
            "$ref": "#/definitions/project"
          },
          "mainbranch": {
            "$ref": "#/definitions/branch"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "snippet_commit": {
    "allOf": [
      {
        "$ref": "#/definitions/base_commit"
      },
      {
        "type": "object",
        "description": "",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "diff": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "snippet": {
            "$ref": "#/definitions/snippet"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_state_in_progress_paused": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_in_progress_stage"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines PAUSED stage of a pipeline that is in progress.",
        "properties": {
          "name": {
            "enum": [
              "PAUSED"
            ],
            "type": "string",
            "description": "The name of the stage (PAUSED)"
          }
        }
      }
    ]
  },
  "search_line": {
    "type": "object",
    "properties": {
      "line": {
        "type": "integer",
        "format": "int32",
        "readOnly": true
      },
      "segments": {
        "type": "array",
        "readOnly": true,
        "items": {
          "$ref": "#/definitions/search_segment"
        }
      }
    }
  },
  "pipeline_error": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "An error causing a pipeline failure.",
        "properties": {
          "key": {
            "type": "string",
            "description": "The error key."
          },
          "message": {
            "type": "string",
            "description": "The error message."
          }
        }
      }
    ]
  },
  "component": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A component as defined in a repository's issue tracker.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "base_commit": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "The common base type for both repository and snippet commits.",
        "properties": {
          "hash": {
            "type": "string",
            "pattern": "[0-9a-f]{7,}?"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "author": {
            "$ref": "#/definitions/author"
          },
          "message": {
            "type": "string"
          },
          "summary": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "string",
                "description": "The text as it was typed by a user."
              },
              "markup": {
                "type": "string",
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ]
              },
              "html": {
                "type": "string",
                "description": "The user's content rendered as HTML."
              }
            },
            "additionalProperties": false
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/base_commit"
            },
            "minItems": 0
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "issue_change": {
    "type": "object",
    "description": "An issue change.",
    "properties": {
      "type": {
        "type": "string"
      },
      "links": {
        "type": "object",
        "properties": {
          "self": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "issue": {
            "type": "object",
            "properties": {
              "href": {
                "type": "string",
                "format": "uri"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "name": {
        "type": "string"
      },
      "created_on": {
        "type": "string",
        "format": "date-time"
      },
      "user": {
        "$ref": "#/definitions/user"
      },
      "issue": {
        "$ref": "#/definitions/issue"
      },
      "changes": {
        "type": "object",
        "properties": {
          "assignee": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "state": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "title": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "kind": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "milestone": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "component": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "priority": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "version": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "content": {
            "type": "object",
            "properties": {
              "old": {
                "type": "string"
              },
              "new": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      "message": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string",
            "description": "The text as it was typed by a user."
          },
          "markup": {
            "type": "string",
            "description": "The type of markup language the raw content is to be interpreted in.",
            "enum": [
              "markdown",
              "creole",
              "plaintext"
            ]
          },
          "html": {
            "type": "string",
            "description": "The user's content rendered as HTML."
          }
        },
        "additionalProperties": false
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "pipeline_step_state_completed_expired": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines EXPIRED pipeline step result.",
        "properties": {
          "name": {
            "enum": [
              "EXPIRED"
            ],
            "type": "string",
            "description": "The name of the result (EXPIRED)"
          }
        }
      }
    ]
  },
  "pipeline_step_state_in_progress": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines IN_PROGRESS pipeline step state.",
        "properties": {
          "name": {
            "enum": [
              "IN_PROGRESS"
            ],
            "type": "string",
            "description": "The name of pipeline step state (IN_PROGRESS)."
          }
        }
      }
    ]
  },
  "pipeline_schedule_execution": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines schedule execution.",
        "properties": {}
      }
    ]
  },
  "pullrequest_endpoint": {
    "type": "object",
    "properties": {
      "repository": {
        "$ref": "#/definitions/repository"
      },
      "branch": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "commit": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string",
            "pattern": "[0-9a-f]{7,}?"
          }
        },
        "additionalProperties": false
      }
    },
    "additionalProperties": false
  },
  "paginated_issue_attachments": {
    "type": "object",
    "description": "A paginated list of issue attachments.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/issue_attachment"
        },
        "minItems": 0
      }
    },
    "additionalProperties": false
  },
  "pipeline_step_state_completed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines COMPLETED pipeline step state.",
        "properties": {
          "name": {
            "enum": [
              "COMPLETED"
            ],
            "type": "string",
            "description": "The name of pipeline step state (COMPLETED)."
          },
          "result": {
            "$ref": "#/definitions/pipeline_step_state_completed_result",
            "description": "A result of a completed state of a pipeline step."
          }
        }
      }
    ]
  },
  "pipeline_schedule": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines schedule.",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The UUID identifying the schedule."
          },
          "enabled": {
            "type": "boolean",
            "description": "Whether the schedule is enabled."
          },
          "target": {
            "$ref": "#/definitions/pipeline_target",
            "description": "The target on which the schedule will be executed."
          },
          "selector": {
            "$ref": "#/definitions/pipeline_selector"
          },
          "cron_pattern": {
            "type": "string",
            "description": "The cron expression that the schedule applies."
          },
          "created_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the schedule was created."
          },
          "updated_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the schedule was updated."
          }
        }
      }
    ]
  },
  "paginated_components": {
    "type": "object",
    "description": "A paginated list of issue tracker components.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/component"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pipeline_step_state_completed_not_run": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines NOT_RUN pipeline step result.",
        "properties": {
          "name": {
            "enum": [
              "NOT_RUN"
            ],
            "type": "string",
            "description": "The name of the result (NOT_RUN)"
          }
        }
      }
    ]
  },
  "issue_attachment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "An issue file attachment's meta data. Note this does not contain the file's actual contents.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_teams": {
    "type": "object",
    "description": "A paginated list of teams.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/team"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_pipeline_schedules": {
    "type": "object",
    "description": "A paged list of schedules",
    "properties": {
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses."
      },
      "values": {
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/pipeline_schedule"
        },
        "description": "The values of the current page."
      },
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute."
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values."
      },
      "next": {
        "type": "string",
        "format": "uri",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs."
      },
      "previous": {
        "type": "string",
        "format": "uri",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs."
      }
    }
  },
  "ssh_account_key": {
    "allOf": [
      {
        "$ref": "#/definitions/ssh_key"
      },
      {
        "type": "object",
        "description": "Represents an SSH public key for a user.",
        "properties": {
          "owner": {
            "$ref": "#/definitions/account"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "commit": {
    "allOf": [
      {
        "$ref": "#/definitions/base_commit"
      },
      {
        "type": "object",
        "description": "A repository commit object.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "diff": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "patch": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "approve": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "comments": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "statuses": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "repository": {
            "$ref": "#/definitions/repository"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/participant"
            },
            "minItems": 0
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_ssh_key_pair": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines SSH key pair.",
        "properties": {
          "private_key": {
            "type": "string",
            "description": "The SSH private key. This value will be empty when retrieving the SSH key pair."
          },
          "public_key": {
            "type": "string",
            "description": "The SSH public key."
          }
        }
      }
    ]
  },
  "pipeline_trigger_push": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_trigger"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines PUSH trigger.",
        "properties": {}
      }
    ]
  },
  "comment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "The base type for all comments. This type should be considered abstract. Each of the \"commentable\" resources defines its own subtypes (e.g. `issue_comment`).",
        "properties": {
          "id": {
            "type": "integer"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time"
          },
          "content": {
            "type": "object",
            "properties": {
              "raw": {
                "type": "string",
                "description": "The text as it was typed by a user."
              },
              "markup": {
                "type": "string",
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ]
              },
              "html": {
                "type": "string",
                "description": "The user's content rendered as HTML."
              }
            },
            "additionalProperties": false
          },
          "user": {
            "$ref": "#/definitions/user"
          },
          "deleted": {
            "type": "boolean"
          },
          "parent": {
            "$ref": "#/definitions/comment"
          },
          "inline": {
            "type": "object",
            "properties": {
              "to": {
                "type": "integer",
                "description": "The comment's anchor line in the new version of the file.",
                "minimum": 1
              },
              "from": {
                "type": "integer",
                "description": "The comment's anchor line in the old version of the file.",
                "minimum": 1
              },
              "path": {
                "type": "string",
                "description": "The path of the file this comment is anchored to."
              }
            },
            "required": [
              "path"
            ],
            "additionalProperties": false
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "code": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_pullrequest_comments": {
    "type": "object",
    "description": "A paginated list of pullrequest comments.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/pullrequest_comment"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_pipeline_schedule_executions": {
    "type": "object",
    "description": "A paged list of the executions of a schedule.",
    "properties": {
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses."
      },
      "values": {
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/pipeline_schedule_execution"
        },
        "description": "The values of the current page."
      },
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute."
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values."
      },
      "next": {
        "type": "string",
        "format": "uri",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs."
      },
      "previous": {
        "type": "string",
        "format": "uri",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs."
      }
    }
  },
  "pipeline_target": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A representation of the target that a pipeline executes on.",
        "properties": {}
      }
    ]
  },
  "pipeline_state_completed_result": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A result of a completed pipeline state.",
        "properties": {}
      }
    ]
  },
  "pipeline_state_in_progress": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines IN_PROGRESS pipeline state.",
        "properties": {
          "name": {
            "enum": [
              "IN_PROGRESS"
            ],
            "type": "string",
            "description": "The name of pipeline state (IN_PROGRESS)."
          },
          "stage": {
            "$ref": "#/definitions/pipeline_state_in_progress_stage",
            "description": "A stage of an in progress state of a pipeline."
          }
        }
      }
    ]
  },
  "pipeline_step_error": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "An error causing a step failure.",
        "properties": {
          "key": {
            "type": "string",
            "description": "The error key."
          },
          "message": {
            "type": "string",
            "description": "The error message."
          }
        }
      }
    ]
  },
  "search_content_match": {
    "type": "object",
    "properties": {
      "lines": {
        "type": "array",
        "readOnly": true,
        "items": {
          "$ref": "#/definitions/search_line"
        }
      }
    }
  },
  "repository_permission": {
    "type": "object",
    "description": "A user's permission for a given repository.",
    "properties": {
      "type": {
        "type": "string"
      },
      "permission": {
        "type": "string",
        "enum": [
          "admin",
          "write",
          "read"
        ]
      },
      "user": {
        "$ref": "#/definitions/user"
      },
      "repository": {
        "$ref": "#/definitions/repository"
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "pipeline_step_state_completed_stopped": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines STOPPED pipeline step result.",
        "properties": {
          "name": {
            "enum": [
              "STOPPED"
            ],
            "type": "string",
            "description": "The name of the result (STOPPED)"
          }
        }
      }
    ]
  },
  "paginated_diffstats": {
    "type": "object",
    "description": "A paginated list of diffstats.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/diffstat"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_pipelines": {
    "type": "object",
    "description": "A paged list of pipelines",
    "properties": {
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses."
      },
      "values": {
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/pipeline"
        },
        "description": "The values of the current page."
      },
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute."
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values."
      },
      "next": {
        "type": "string",
        "format": "uri",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs."
      },
      "previous": {
        "type": "string",
        "format": "uri",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs."
      }
    }
  },
  "pipeline_state_completed_successful": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines SUCCESSFUL pipeline result.",
        "properties": {
          "name": {
            "enum": [
              "SUCCESSFUL"
            ],
            "type": "string",
            "description": "The name of the successful result (SUCCESSFUL)."
          }
        }
      }
    ]
  },
  "pipeline_state": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "The representation of the progress state of a pipeline.",
        "properties": {}
      }
    ]
  },
  "paginated_pullrequests": {
    "type": "object",
    "description": "A paginated list of pullrequests.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/pullrequest"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pipeline_step": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A step of a Bitbucket pipeline. This represents the actual result of the step execution.",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The UUID identifying the step."
          },
          "started_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the step execution was started. This is not set when the step hasn't executed yet."
          },
          "completed_on": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the step execution was completed. This is not set if the step is still in progress."
          },
          "state": {
            "$ref": "#/definitions/pipeline_step_state",
            "description": "The current state of the step"
          },
          "image": {
            "$ref": "#/definitions/pipeline_image",
            "description": "The Docker image used as the build container for the step."
          },
          "setup_commands": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/pipeline_command"
            },
            "description": "The list of commands that are executed as part of the setup phase of the build. These commands are executed outside the build container."
          },
          "script_commands": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/pipeline_command"
            },
            "description": "The list of build commands. These commands are executed in the build container."
          },
          "logByteCount": {
            "type": "integer",
            "description": "The amount of bytes of the log file that is available."
          }
        }
      }
    ]
  },
  "search_code_search_result": {
    "type": "object",
    "properties": {
      "type": {
        "type": "string",
        "readOnly": true
      },
      "content_match_count": {
        "type": "integer",
        "format": "int64",
        "readOnly": true
      },
      "content_matches": {
        "type": "array",
        "readOnly": true,
        "items": {
          "$ref": "#/definitions/search_content_match"
        }
      },
      "path_matches": {
        "type": "array",
        "readOnly": true,
        "items": {
          "$ref": "#/definitions/search_segment"
        }
      },
      "file": {
        "readOnly": true,
        "$ref": "#/definitions/commit_file"
      }
    }
  },
  "paginated_branchrestrictions": {
    "type": "object",
    "description": "A paginated list of branch restriction rules.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/branchrestriction"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "ssh_key": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "Base type for representing SSH public keys.",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The SSH key's immutable ID."
          },
          "key": {
            "type": "string",
            "description": "The SSH public key value in OpenSSH format."
          },
          "comment": {
            "type": "string",
            "description": "The comment parsed from the SSH key (if present)"
          },
          "label": {
            "type": "string",
            "description": "The user-defined label for the SSH key"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "last_used": {
            "type": "string",
            "format": "date-time"
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_issues": {
    "type": "object",
    "description": "A paginated list of issues.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/issue"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "commitstatus": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A commit status object.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "commit": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "uuid": {
            "type": "string",
            "description": "The commit status' id."
          },
          "key": {
            "type": "string",
            "description": "An identifier for the status that's unique to\n        its type (current \"build\" is the only supported type) and the vendor,\n        e.g. BB-DEPLOY"
          },
          "refname": {
            "type": "string",
            "description": "\nThe name of the ref that pointed to this commit at the time the status\nobject was created. Note that this the ref may since have moved off of\nthe commit. This optional field can be useful for build systems whose\nbuild triggers and configuration are branch-dependent (e.g. a Pipeline\nbuild).\nIt is legitimate for this field to not be set, or even apply (e.g. a\nstatic linting job)."
          },
          "url": {
            "type": "string",
            "description": "A URL linking back to the vendor or build system, for providing more information about whatever process produced this status. Accepts context variables `repository` and `commit` that Bitbucket will evaluate at runtime whenever at runtime. For example, one could use https://foo.com/builds/{repository.full_name} which Bitbucket will turn into https://foo.com/builds/foo/bar at render time."
          },
          "state": {
            "type": "string",
            "description": "Provides some indication of the status of this commit",
            "enum": [
              "SUCCESSFUL",
              "FAILED",
              "INPROGRESS",
              "STOPPED"
            ]
          },
          "name": {
            "type": "string",
            "description": "An identifier for the build itself, e.g. BB-DEPLOY-1"
          },
          "description": {
            "type": "string",
            "description": "A description of the build (e.g. \"Unit tests in Bamboo\")"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_known_host": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines known host.",
        "properties": {
          "uuid": {
            "type": "string",
            "description": "The UUID identifying the known host."
          },
          "hostname": {
            "type": "string",
            "description": "The hostname of the known host."
          },
          "public_key": {
            "$ref": "#/definitions/pipeline_ssh_public_key",
            "description": "The public key of the known host."
          }
        }
      }
    ]
  },
  "account": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "An account object.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "followers": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "following": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "repositories": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "username": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_\\-]+$"
          },
          "display_name": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "uuid": {
            "type": "string"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_commitstatuses": {
    "type": "object",
    "description": "A paginated list of commit status objects.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/commitstatus"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pipeline_state_in_progress_running": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_in_progress_stage"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines RUNNING stage of a pipeline that is in progress.",
        "properties": {
          "name": {
            "enum": [
              "RUNNING"
            ],
            "type": "string",
            "description": "The name of the stage (RUNNING)"
          }
        }
      }
    ]
  },
  "paginated_refs": {
    "type": "object",
    "description": "A paginated list of refs.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ref"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "paginated_snippet_commit": {
    "type": "object",
    "description": "A paginated list of snippet commits.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/snippet_commit"
        },
        "minItems": 0
      }
    },
    "additionalProperties": false
  },
  "branchrestriction": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A branch restriction rule.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "id": {
            "type": "integer",
            "description": "The branch restriction status' id."
          },
          "kind": {
            "type": "string",
            "description": "The type of restriction that is being applied",
            "enum": [
              "require_tasks_to_be_completed",
              "require_passing_builds_to_merge",
              "force",
              "require_all_dependencies_merged",
              "push",
              "require_approvals_to_merge",
              "enforce_merge_checks",
              "restrict_merges",
              "reset_pullrequest_approvals_on_change",
              "delete"
            ]
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/account"
            },
            "minItems": 0
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/group"
            },
            "minItems": 0
          },
          "value": {
            "type": "integer",
            "description": "Value with kind-specific semantics: \"require_approvals_to_merge\" uses it to require a minimum number of approvals on a PR; \"require_passing_builds_to_merge\" uses it to require a minimum number of passing builds."
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_step_state_completed_result": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A result of a completed pipeline step state.",
        "properties": {}
      }
    ]
  },
  "pipeline_trigger": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A representation of the trigger used for a pipeline.",
        "properties": {}
      }
    ]
  },
  "project": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A Bitbucket project.\n            Projects are used by teams to organize repositories.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "avatar": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "uuid": {
            "type": "string",
            "description": "The project's immutable id."
          },
          "key": {
            "type": "string",
            "description": "The project's key."
          },
          "owner": {
            "$ref": "#/definitions/team"
          },
          "name": {
            "type": "string",
            "description": "The name of the project."
          },
          "description": {
            "type": "string"
          },
          "is_private": {
            "type": "boolean",
            "description": "\nIndicates whether the project is publicly accessible, or whether it is\nprivate to the team and consequently only visible to team members.\nNote that private projects cannot contain public repositories."
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_log_range": {
    "type": "object",
    "description": "A reference to a range of bytes in a log file (does not contain the actual bytes).",
    "properties": {
      "first_byte_position": {
        "type": "integer",
        "description": "The position of the first byte of the range in the log."
      },
      "last_byte_position": {
        "type": "integer",
        "description": "The position of the last byte of the range in the log."
      }
    }
  },
  "error": {
    "type": "object",
    "description": "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
    "properties": {
      "type": {
        "type": "string"
      },
      "error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "description": "Optional structured data that is endpoint-specific.",
            "properties": {},
            "additionalProperties": true
          }
        },
        "required": [
          "message"
        ],
        "additionalProperties": false
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "paginated_hook_events": {
    "type": "object",
    "description": "A paginated list of webhook types available to subscribe on.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/hook_event"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "diffstat": {
    "type": "object",
    "description": "A diffstat object that includes a summary of changes made to a file between two commits.",
    "properties": {
      "type": {
        "type": "string"
      },
      "status": {
        "type": "string",
        "enum": [
          "added",
          "removed",
          "modified",
          "renamed"
        ]
      },
      "lines_added": {
        "type": "integer"
      },
      "lines_removed": {
        "type": "integer"
      },
      "old": {
        "$ref": "#/definitions/commit_file"
      },
      "new": {
        "$ref": "#/definitions/commit_file"
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "pullrequest_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/comment"
      },
      {
        "type": "object",
        "description": "A pullrequest comment.",
        "properties": {
          "pullrequest": {
            "$ref": "#/definitions/pullrequest"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "tag": {
    "allOf": [
      {
        "$ref": "#/definitions/ref"
      },
      {
        "type": "object",
        "description": "A tag object, representing a tag in a repository.",
        "properties": {
          "message": {
            "type": "string",
            "description": "The message associated with the tag, if available."
          },
          "date": {
            "type": "string",
            "description": "The date that the tag was created, if available",
            "format": "date-time"
          },
          "tagger": {
            "$ref": "#/definitions/author"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_trigger_manual": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_trigger"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines MANUAL trigger.",
        "properties": {}
      }
    ]
  },
  "participant": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "Object describing a user's role on resources like commits or pull requests.",
        "properties": {
          "user": {
            "$ref": "#/definitions/user"
          },
          "role": {
            "type": "string",
            "enum": [
              "PARTICIPANT",
              "REVIEWER"
            ]
          },
          "approved": {
            "type": "boolean"
          },
          "participated_on": {
            "type": "string",
            "description": "The ISO8601 timestamp of the participant's action. For approvers, this is the time of their approval. For commenters and pull request reviewers who are not approvers, this is the time they last commented, or null if they have not commented.",
            "format": "date-time"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_versions": {
    "type": "object",
    "description": "A paginated list of issue tracker versions.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/version"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pipeline_step_state": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "The representation of the progress state of a pipeline step.",
        "properties": {}
      }
    ]
  },
  "paginated_users": {
    "type": "object",
    "description": "A paginated list of users.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/user"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "commit_file": {
    "type": "object",
    "description": "A file object, representing a file at a commit in a repository",
    "properties": {
      "type": {
        "type": "string"
      },
      "path": {
        "type": "string",
        "description": "The path in the repository"
      },
      "commit": {
        "$ref": "#/definitions/commit"
      },
      "attributes": {
        "type": "string",
        "enum": [
          "link",
          "executable",
          "subrepository",
          "binary",
          "lfs"
        ]
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  },
  "snippet": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A snippet object.",
        "properties": {
          "id": {
            "type": "integer",
            "minimum": 0
          },
          "title": {
            "type": "string"
          },
          "scm": {
            "type": "string",
            "description": "The DVCS used to store the snippet.",
            "enum": [
              "hg",
              "git"
            ]
          },
          "created_on": {
            "type": "string",
            "format": "date-time"
          },
          "updated_on": {
            "type": "string",
            "format": "date-time"
          },
          "owner": {
            "$ref": "#/definitions/account"
          },
          "creator": {
            "$ref": "#/definitions/account"
          },
          "is_private": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "hook_event": {
    "type": "object",
    "description": "An event, associated with a resource or subject type.",
    "properties": {
      "event": {
        "type": "string",
        "description": "The event identifier.",
        "enum": [
          "pullrequest:unapproved",
          "issue:comment_created",
          "pullrequest:approved",
          "repo:created",
          "repo:deleted",
          "repo:imported",
          "pullrequest:comment_updated",
          "issue:updated",
          "project:updated",
          "pullrequest:comment_created",
          "repo:commit_status_updated",
          "pullrequest:updated",
          "issue:created",
          "repo:fork",
          "pullrequest:comment_deleted",
          "repo:commit_status_created",
          "repo:updated",
          "pullrequest:rejected",
          "pullrequest:fulfilled",
          "repo:push",
          "pullrequest:created",
          "repo:transfer",
          "repo:commit_comment_created"
        ]
      },
      "category": {
        "type": "string",
        "description": "The category this event belongs to."
      },
      "label": {
        "type": "string",
        "description": "Summary of the webhook event type."
      },
      "description": {
        "type": "string",
        "description": "More detailed description of the webhook event type."
      }
    },
    "additionalProperties": false
  },
  "branch": {
    "allOf": [
      {
        "$ref": "#/definitions/ref"
      },
      {
        "type": "object",
        "description": "A branch object, representing a branch in a repository.",
        "properties": {},
        "additionalProperties": true
      }
    ]
  },
  "pipeline_command": {
    "type": "object",
    "description": "An executable pipeline command.",
    "properties": {
      "name": {
        "type": "string",
        "description": "The name of the command."
      },
      "command": {
        "type": "string",
        "description": "The executable command."
      },
      "log_range": {
        "$ref": "#/definitions/pipeline_log_range",
        "description": "The range in the log that contains the execution output of this command."
      }
    }
  },
  "pipeline_state_completed_error": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines ERROR pipeline result.",
        "properties": {
          "name": {
            "enum": [
              "ERROR"
            ],
            "type": "string",
            "description": "The name of the result (ERROR)"
          },
          "error": {
            "$ref": "#/definitions/pipeline_error",
            "description": "An error result of a completed state of a Bitbucket Pipeline."
          }
        }
      }
    ]
  },
  "object": {
    "type": "object",
    "description": "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
    "properties": {
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true,
    "discriminator": "type"
  },
  "pipeline_state_pending": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines PENDING pipeline state.",
        "properties": {
          "name": {
            "enum": [
              "PENDING"
            ],
            "type": "string",
            "description": "The name of pipeline state (PENDING)."
          }
        }
      }
    ]
  },
  "pipeline_step_state_completed_successful": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines SUCCESSFUL pipeline step result.",
        "properties": {
          "name": {
            "enum": [
              "SUCCESSFUL"
            ],
            "type": "string",
            "description": "The name of the result (SUCCESSFUL)"
          }
        }
      }
    ]
  },
  "user": {
    "allOf": [
      {
        "$ref": "#/definitions/account"
      },
      {
        "type": "object",
        "description": "A user object.",
        "properties": {
          "is_staff": {
            "type": "boolean"
          },
          "account_id": {
            "type": "string",
            "description": "The user's Atlassian account ID."
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_webhook_subscriptions": {
    "type": "object",
    "description": "A paginated list of webhook subscriptions",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/webhook_subscription"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "snippet_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "A comment on a snippet.",
        "properties": {
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "html": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "format": "uri"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "snippet": {
            "$ref": "#/definitions/snippet"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "pipeline_build_number": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Pipelines build number.",
        "properties": {
          "next": {
            "type": "integer",
            "description": "The next number that will be used as build number."
          }
        }
      }
    ]
  },
  "pipeline_state_completed_failed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A Bitbucket Pipelines FAILED pipeline result.",
        "properties": {
          "name": {
            "enum": [
              "FAILED"
            ],
            "type": "string",
            "description": "The name of the failed result (FAILED)."
          }
        }
      }
    ]
  },
  "author": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "type": "object",
        "description": "The author of a change in a repository",
        "properties": {
          "raw": {
            "type": "string",
            "description": "The raw author value from the repository. This may be the only value available if the author does not match a user in Bitbucket."
          },
          "user": {
            "$ref": "#/definitions/account"
          }
        },
        "additionalProperties": true
      }
    ]
  },
  "paginated_pipeline_known_hosts": {
    "type": "object",
    "description": "A paged list of known hosts.",
    "properties": {
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses."
      },
      "values": {
        "type": "array",
        "minItems": 0,
        "items": {
          "$ref": "#/definitions/pipeline_known_host"
        },
        "description": "The values of the current page."
      },
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute."
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values."
      },
      "next": {
        "type": "string",
        "format": "uri",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs."
      },
      "previous": {
        "type": "string",
        "format": "uri",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs."
      }
    }
  },
  "paginated_tags": {
    "type": "object",
    "description": "A paginated list of tags.",
    "properties": {
      "size": {
        "type": "integer",
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0
      },
      "page": {
        "type": "integer",
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1
      },
      "pagelen": {
        "type": "integer",
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1
      },
      "next": {
        "type": "string",
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "previous": {
        "type": "string",
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri"
      },
      "values": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/tag"
        },
        "minItems": 0,
        "uniqueItems": true
      }
    },
    "additionalProperties": false
  },
  "pipeline_selector": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "type": "object",
        "description": "A representation of the selector that was used to identify the pipeline in the YML file.",
        "properties": {
          "type": {
            "enum": [
              "branches",
              "tags",
              "bookmarks",
              "default",
              "custom"
            ],
            "type": "string",
            "description": "The type of selector."
          },
          "pattern": {
            "type": "string",
            "description": "The name of the matching pipeline definition."
          }
        }
      }
    ]
  },
  "treeentry": {
    "type": "object",
    "description": "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
    "properties": {
      "type": {
        "type": "string"
      },
      "path": {
        "type": "string",
        "description": "The path in the repository"
      },
      "commit": {
        "$ref": "#/definitions/commit"
      }
    },
    "required": [
      "type"
    ],
    "additionalProperties": true
  }
}
