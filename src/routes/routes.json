{
  "branchrestrictions": {
    "create": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Branchrestriction",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branchrestriction",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions/{id}"
    },
    "get": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branchrestriction",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions/{id}"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedBranchrestrictions",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions"
    },
    "update": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Branchrestriction",
          "type": "any"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branchrestriction",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions/{id}"
    }
  },
  "commits": {
    "createApproval": {
      "method": "POST",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Participant",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/approve"
    },
    "deleteApproval": {
      "method": "DELETE",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/approve"
    },
    "fetchAll": {
      "accepts": [
        "x-www-form-urlencoded"
      ],
      "method": "POST",
      "params": {
        "exclude": {
          "in": "body",
          "type": "string"
        },
        "include": {
          "in": "body",
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits"
    },
    "fetchAllForRevision": {
      "method": "POST",
      "params": {
        "exclude": {
          "in": "body",
          "type": "string"
        },
        "include": {
          "in": "body",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "revision": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits/{revision}"
    },
    "get": {
      "method": "GET",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commit",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}"
    },
    "getAllForRevision": {
      "method": "GET",
      "params": {
        "exclude": {
          "in": "query",
          "type": "string"
        },
        "include": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "revision": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits/{revision}"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "CommitComment",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/comments/{comment_id}"
    },
    "getDiff": {
      "method": "GET",
      "params": {
        "binary": {
          "in": "query",
          "type": "boolean"
        },
        "context": {
          "in": "query",
          "type": "integer"
        },
        "ignore_whitespace": {
          "in": "query",
          "type": "boolean"
        },
        "path": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "spec": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/diff/{spec}"
    },
    "getPatch": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "spec": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/patch/{spec}"
    },
    "list": {
      "method": "GET",
      "params": {
        "exclude": {
          "in": "query",
          "type": "string"
        },
        "include": {
          "in": "query",
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedCommitComments",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/comments"
    }
  },
  "commitstatuses": {
    "createBuildStatus": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Commitstatus",
          "type": "any"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commitstatus",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build"
    },
    "getBuildStatus": {
      "method": "GET",
      "params": {
        "key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commitstatus",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build/{key}"
    },
    "list": {
      "method": "GET",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedCommitstatuses",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses"
    },
    "listPullRequestStatuses": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedCommitstatuses",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/statuses"
    },
    "updateBuildStatus": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Commitstatus",
          "type": "any"
        },
        "key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commitstatus",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build/{key}"
    }
  },
  "downloads": {
    "create": {
      "accepts": [
        "multipart/form-data"
      ],
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "filename": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads/{filename}"
    },
    "get": {
      "method": "GET",
      "params": {
        "filename": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads/{filename}"
    },
    "getAll": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads"
    }
  },
  "hook_events": {
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "subject_type": {
          "enum": [
            "user",
            "repository",
            "team"
          ],
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedHookEvents",
      "url": "/hook_events/{subject_type}"
    },
    "listSubjectTypes": {
      "method": "GET",
      "returns": "SubjectTypes",
      "url": "/hook_events"
    }
  },
  "issue_tracker": {
    "create": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Issue",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues"
    },
    "createAttachments": {
      "accepts": [
        "multipart/form-data"
      ],
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments"
    },
    "createChange": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueChange",
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueChange",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/changes"
    },
    "createComment": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueComment",
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments"
    },
    "createVote": {
      "method": "PUT",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/vote"
    },
    "createWatch": {
      "method": "PUT",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/watch"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}"
    },
    "deleteAttachment": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments/{path}"
    },
    "deleteComment": {
      "method": "DELETE",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueComment",
          "type": "any"
        },
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"
    },
    "deleteVote": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/vote"
    },
    "deleteWatch": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/watch"
    },
    "get": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}"
    },
    "getAttachment": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments/{path}"
    },
    "getChange": {
      "method": "GET",
      "params": {
        "change_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueChange",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/changes/{change_id}"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueComment",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"
    },
    "getComponent": {
      "method": "GET",
      "params": {
        "component_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Component",
      "url": "/repositories/{username}/{repo_slug}/components/{component_id}"
    },
    "getMilestone": {
      "method": "GET",
      "params": {
        "milestone_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Milestone",
      "url": "/repositories/{username}/{repo_slug}/milestones/{milestone_id}"
    },
    "getVersion": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "version_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "returns": "Version",
      "url": "/repositories/{username}/{repo_slug}/versions/{version_id}"
    },
    "getVote": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/vote"
    },
    "getWatch": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/watch"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedIssues",
      "url": "/repositories/{username}/{repo_slug}/issues"
    },
    "listAttachments": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedIssueAttachments",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments"
    },
    "listChanges": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedLogEntries",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/changes"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedIssueComments",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments"
    },
    "listComponents": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedComponents",
      "url": "/repositories/{username}/{repo_slug}/components"
    },
    "listMilestones": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedMilestones",
      "url": "/repositories/{username}/{repo_slug}/milestones"
    },
    "listVersions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedVersions",
      "url": "/repositories/{username}/{repo_slug}/versions"
    },
    "update": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Issue",
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}"
    },
    "updateComment": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueComment",
          "type": "any"
        },
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueComment",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"
    }
  },
  "pipelines": {
    "create": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Pipeline",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pipeline",
      "url": "/repositories/{username}/{repo_slug}/pipelines/"
    },
    "createKnownHost": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineKnownHost",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineKnownHost",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/"
    },
    "createSchedule": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineSchedule",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSchedule",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/"
    },
    "createVariable": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/"
    },
    "createVariableForTeam": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/teams/{username}/pipelines_config/variables/"
    },
    "createVariableForUser": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/users/{username}/pipelines_config/variables/"
    },
    "deleteKnownHost": {
      "method": "DELETE",
      "params": {
        "known_host_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"
    },
    "deleteSchedule": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "schedule_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"
    },
    "deleteSshKeyPair": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/key_pair"
    },
    "deleteVariable": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/{variable_uuid}"
    },
    "deleteVariableForTeam": {
      "method": "DELETE",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "deleteVariableForUser": {
      "method": "DELETE",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "get": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pipeline",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}"
    },
    "getConfig": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelinesConfig",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config"
    },
    "getKnownHost": {
      "method": "GET",
      "params": {
        "known_host_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineKnownHost",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"
    },
    "getSchedule": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "schedule_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSchedule",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"
    },
    "getSshKeyPair": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSshKeyPair",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/key_pair"
    },
    "getStep": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "step_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineStep",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}"
    },
    "getStepLog": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "step_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/log"
    },
    "getVariable": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/{variable_uuid}"
    },
    "getVariableForTeam": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/teams/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "getVariableForUser": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/users/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelines",
      "url": "/repositories/{username}/{repo_slug}/pipelines/"
    },
    "listKnownHosts": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineKnownHosts",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/"
    },
    "listScheduleExecutions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineScheduleExecutions",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}/executions/"
    },
    "listSchedules": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineSchedules",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/"
    },
    "listSteps": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineSteps",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/steps/"
    },
    "listVariablesForRepo": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineVariables",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/"
    },
    "listVariablesForTeam": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineVariables",
      "url": "/teams/{username}/pipelines_config/variables/"
    },
    "listVariablesForUser": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineVariables",
      "url": "/users/{username}/pipelines_config/variables/"
    },
    "stop": {
      "method": "POST",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/stopPipeline"
    },
    "updateBuildNumber": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineBuildNumber",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineBuildNumber",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/build_number"
    },
    "updateConfig": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelinesConfig",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelinesConfig",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config"
    },
    "updateKnownHost": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineKnownHost",
          "type": "any"
        },
        "known_host_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineKnownHost",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"
    },
    "updateSchedule": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineSchedule",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "schedule_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSchedule",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"
    },
    "updateSshKeyPair": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineSshKeyPair",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSshKeyPair",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/key_pair"
    },
    "updateVariable": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/{variable_uuid}"
    },
    "updateVariableForTeam": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/teams/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "updateVariableForUser": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/users/{username}/pipelines_config/variables/{variable_uuid}"
    }
  },
  "projects": {
    "createForTeam": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Project",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Project",
      "url": "/teams/{username}/projects/"
    },
    "deleteForTeam": {
      "method": "DELETE",
      "params": {
        "project_key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/projects/{project_key}"
    },
    "getForTeam": {
      "method": "GET",
      "params": {
        "project_key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Project",
      "url": "/teams/{username}/projects/{project_key}"
    },
    "listForTeam": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedProjects",
      "url": "/teams/{username}/projects/"
    },
    "updateForTeam": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Project",
          "type": "any"
        },
        "project_key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Project",
      "url": "/teams/{username}/projects/{project_key}"
    }
  },
  "pullrequests": {
    "addDefaultReviewer": {
      "method": "PUT",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "target_username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}"
    },
    "create": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Pullrequest",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests"
    },
    "createApproval": {
      "method": "POST",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Participant",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve"
    },
    "decline": {
      "method": "POST",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/decline"
    },
    "deleteApproval": {
      "method": "DELETE",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve"
    },
    "deleteDefaultReviewer": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "target_username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}"
    },
    "get": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}"
    },
    "getActivityLog": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/activity"
    },
    "getAllActivityLog": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/activity"
    },
    "getAllCommits": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/commits"
    },
    "getAllDefaultReviewers": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PullrequestComment",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}"
    },
    "getDefaultReviewer": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "target_username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}"
    },
    "getDiff": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/diff"
    },
    "getDiffStat": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/diffstat"
    },
    "getPatch": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/patch"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "state": {
          "enum": [
            "MERGED",
            "SUPERSEDED",
            "OPEN",
            "DECLINED"
          ],
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPullrequests",
      "url": "/repositories/{username}/{repo_slug}/pullrequests"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPullrequestComments",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments"
    },
    "listStatuses": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedCommitstatuses",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/statuses"
    },
    "merge": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "PullrequestMergeParameters",
          "type": "any"
        },
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/merge"
    },
    "update": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Pullrequest",
          "type": "any"
        },
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}"
    }
  },
  "refs": {
    "createBranch": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branch",
      "url": "/repositories/{username}/{repo_slug}/refs/branches"
    },
    "createTag": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Tag",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Tag",
      "url": "/repositories/{username}/{repo_slug}/refs/tags"
    },
    "deleteBranch": {
      "method": "DELETE",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/refs/branches/{name}"
    },
    "deleteTag": {
      "method": "DELETE",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/refs/tags/{name}"
    },
    "getBranch": {
      "method": "GET",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branch",
      "url": "/repositories/{username}/{repo_slug}/refs/branches/{name}"
    },
    "getTag": {
      "method": "GET",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Tag",
      "url": "/repositories/{username}/{repo_slug}/refs/tags/{name}"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedRefs",
      "url": "/repositories/{username}/{repo_slug}/refs"
    },
    "listBranches": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedBranches",
      "url": "/repositories/{username}/{repo_slug}/refs/branches"
    },
    "listTags": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedTags",
      "url": "/repositories/{username}/{repo_slug}/refs/tags"
    }
  },
  "repositories": {
    "addDefaultReviewer": {
      "method": "PUT",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "target_username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}"
    },
    "create": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Repository",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Repository",
      "url": "/repositories/{username}/{repo_slug}"
    },
    "createBranch": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branch",
      "url": "/repositories/{username}/{repo_slug}/refs/branches"
    },
    "createBranchRestriction": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Branchrestriction",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branchrestriction",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions"
    },
    "createCommitApproval": {
      "method": "POST",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Participant",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/approve"
    },
    "createCommitBuildStatus": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Commitstatus",
          "type": "any"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commitstatus",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build"
    },
    "createDownload": {
      "accepts": [
        "multipart/form-data"
      ],
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads"
    },
    "createFork": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Repository",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Repository",
      "url": "/repositories/{username}/{repo_slug}/forks"
    },
    "createIssue": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Issue",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues"
    },
    "createIssueAttachments": {
      "accepts": [
        "multipart/form-data"
      ],
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments"
    },
    "createIssueChange": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueChange",
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueChange",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/changes"
    },
    "createIssueComment": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueComment",
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments"
    },
    "createIssueVote": {
      "method": "PUT",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/vote"
    },
    "createIssueWatch": {
      "method": "PUT",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/watch"
    },
    "createPipeline": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Pipeline",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pipeline",
      "url": "/repositories/{username}/{repo_slug}/pipelines/"
    },
    "createPipelineKnownHost": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineKnownHost",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineKnownHost",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/"
    },
    "createPipelineSchedule": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineSchedule",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSchedule",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/"
    },
    "createPipelineVariable": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/"
    },
    "createPullRequest": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Pullrequest",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests"
    },
    "createPullRequestApproval": {
      "method": "POST",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Participant",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve"
    },
    "createSrcFileCommit": {
      "accepts": [
        "multipart/form-data",
        "application/x-www-form-urlencoded"
      ],
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "author": {
          "in": "query",
          "type": "string"
        },
        "branch": {
          "in": "query",
          "type": "string"
        },
        "files": {
          "in": "query",
          "type": "string"
        },
        "message": {
          "in": "query",
          "type": "string"
        },
        "parents": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/src"
    },
    "createTag": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Tag",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Tag",
      "url": "/repositories/{username}/{repo_slug}/refs/tags"
    },
    "createWebhook": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/repositories/{username}/{repo_slug}/hooks"
    },
    "declinePullRequest": {
      "method": "POST",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/decline"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "redirect_to": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}"
    },
    "deleteBranch": {
      "method": "DELETE",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/refs/branches/{name}"
    },
    "deleteBranchRestriction": {
      "method": "DELETE",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions/{id}"
    },
    "deleteCommitApproval": {
      "method": "DELETE",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/approve"
    },
    "deleteDefaultReviewer": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "target_username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}"
    },
    "deleteDownload": {
      "method": "DELETE",
      "params": {
        "filename": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads/{filename}"
    },
    "deleteIssue": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}"
    },
    "deleteIssueAttachment": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments/{path}"
    },
    "deleteIssueComment": {
      "method": "DELETE",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueComment",
          "type": "any"
        },
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"
    },
    "deleteIssueVote": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/vote"
    },
    "deleteIssueWatch": {
      "method": "DELETE",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/watch"
    },
    "deletePipelineKnownHost": {
      "method": "DELETE",
      "params": {
        "known_host_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"
    },
    "deletePipelineSchedule": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "schedule_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"
    },
    "deletePipelineSshKeyPair": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/key_pair"
    },
    "deletePipelineVariable": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/{variable_uuid}"
    },
    "deletePullRequestApproval": {
      "method": "DELETE",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve"
    },
    "deleteTag": {
      "method": "DELETE",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/refs/tags/{name}"
    },
    "deleteWebhook": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/hooks/{uid}"
    },
    "fetchAllCommits": {
      "accepts": [
        "x-www-form-urlencoded"
      ],
      "method": "POST",
      "params": {
        "exclude": {
          "in": "body",
          "type": "string"
        },
        "include": {
          "in": "body",
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits"
    },
    "fetchAllCommitsForRevision": {
      "method": "POST",
      "params": {
        "exclude": {
          "in": "body",
          "type": "string"
        },
        "include": {
          "in": "body",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "revision": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits/{revision}"
    },
    "get": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Repository",
      "url": "/repositories/{username}/{repo_slug}"
    },
    "getAllCommitsForRevision": {
      "method": "GET",
      "params": {
        "exclude": {
          "in": "query",
          "type": "string"
        },
        "include": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "revision": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits/{revision}"
    },
    "getAllDefaultReviewers": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers"
    },
    "getAllDownloads": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads"
    },
    "getAllPullRequestCommits": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/commits"
    },
    "getAllPullRequestsActivityLog": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/activity"
    },
    "getAllWatchers": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/watchers"
    },
    "getBranch": {
      "method": "GET",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branch",
      "url": "/repositories/{username}/{repo_slug}/refs/branches/{name}"
    },
    "getBranchRestriction": {
      "method": "GET",
      "params": {
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branchrestriction",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions/{id}"
    },
    "getCommit": {
      "method": "GET",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commit",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}"
    },
    "getCommitBuildStatus": {
      "method": "GET",
      "params": {
        "key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commitstatus",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build/{key}"
    },
    "getCommitComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "CommitComment",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/comments/{comment_id}"
    },
    "getDefaultReviewer": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "target_username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}"
    },
    "getDiff": {
      "method": "GET",
      "params": {
        "binary": {
          "in": "query",
          "type": "boolean"
        },
        "context": {
          "in": "query",
          "type": "integer"
        },
        "ignore_whitespace": {
          "in": "query",
          "type": "boolean"
        },
        "path": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "spec": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/diff/{spec}"
    },
    "getDownload": {
      "method": "GET",
      "params": {
        "filename": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/downloads/{filename}"
    },
    "getIssue": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}"
    },
    "getIssueAttachment": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments/{path}"
    },
    "getIssueChange": {
      "method": "GET",
      "params": {
        "change_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueChange",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/changes/{change_id}"
    },
    "getIssueComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueComment",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"
    },
    "getIssueComponent": {
      "method": "GET",
      "params": {
        "component_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Component",
      "url": "/repositories/{username}/{repo_slug}/components/{component_id}"
    },
    "getIssueMilestone": {
      "method": "GET",
      "params": {
        "milestone_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Milestone",
      "url": "/repositories/{username}/{repo_slug}/milestones/{milestone_id}"
    },
    "getIssueVersion": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "version_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        }
      },
      "returns": "Version",
      "url": "/repositories/{username}/{repo_slug}/versions/{version_id}"
    },
    "getIssueVote": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/vote"
    },
    "getIssueWatch": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/watch"
    },
    "getPatch": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "spec": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/patch/{spec}"
    },
    "getPipeline": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pipeline",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}"
    },
    "getPipelineConfig": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelinesConfig",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config"
    },
    "getPipelineKnownHost": {
      "method": "GET",
      "params": {
        "known_host_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineKnownHost",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"
    },
    "getPipelineSchedule": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "schedule_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSchedule",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"
    },
    "getPipelineSshKeyPair": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSshKeyPair",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/key_pair"
    },
    "getPipelineStep": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "step_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineStep",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}"
    },
    "getPipelineStepLog": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "step_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Error",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/log"
    },
    "getPipelineVariable": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/{variable_uuid}"
    },
    "getPullRequest": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}"
    },
    "getPullRequestActivityLog": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/activity"
    },
    "getPullRequestComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PullrequestComment",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}"
    },
    "getPullRequestDiff": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/diff"
    },
    "getPullRequestDiffStat": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/diffstat"
    },
    "getPullRequestPatch": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/patch"
    },
    "getSrc": {
      "method": "GET",
      "params": {
        "format": {
          "enum": [
            "meta",
            "rendered"
          ],
          "in": "query",
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedTreeentries",
      "url": "/repositories/{username}/{repo_slug}/src/{node}/{path}"
    },
    "getSrcMainRoot": {
      "method": "GET",
      "params": {
        "format": {
          "enum": [
            "meta"
          ],
          "in": "query",
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedTreeentries",
      "url": "/repositories/{username}/{repo_slug}/src"
    },
    "getTag": {
      "method": "GET",
      "params": {
        "name": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Tag",
      "url": "/repositories/{username}/{repo_slug}/refs/tags/{name}"
    },
    "getWebhook": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/repositories/{username}/{repo_slug}/hooks/{uid}"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "role": {
          "enum": [
            "admin",
            "contributor",
            "member",
            "owner"
          ],
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedRepositories",
      "url": "/repositories/{username}"
    },
    "listBranches": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedBranches",
      "url": "/repositories/{username}/{repo_slug}/refs/branches"
    },
    "listBranchRestrictions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedBranchrestrictions",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions"
    },
    "listCommitComments": {
      "method": "GET",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedCommitComments",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "exclude": {
          "in": "query",
          "type": "string"
        },
        "include": {
          "in": "query",
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/commits"
    },
    "listCommitStatuses": {
      "method": "GET",
      "params": {
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedCommitstatuses",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses"
    },
    "listComponents": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedComponents",
      "url": "/repositories/{username}/{repo_slug}/components"
    },
    "listDiffStats": {
      "method": "GET",
      "params": {
        "ignore_whitespace": {
          "in": "query",
          "type": "boolean"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "spec": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedDiffstats",
      "url": "/repositories/{username}/{repo_slug}/diffstat/{spec}"
    },
    "listFileHistory": {
      "method": "GET",
      "params": {
        "fields": {
          "in": "query",
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "renames": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedFiles",
      "url": "/repositories/{username}/{repo_slug}/filehistory/{node}/{path}"
    },
    "listForks": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedRepositories",
      "url": "/repositories/{username}/{repo_slug}/forks"
    },
    "listIssueAttachments": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedIssueAttachments",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/attachments"
    },
    "listIssueChanges": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedLogEntries",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/changes"
    },
    "listIssueComments": {
      "method": "GET",
      "params": {
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedIssueComments",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments"
    },
    "listIssues": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedIssues",
      "url": "/repositories/{username}/{repo_slug}/issues"
    },
    "listMilestones": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedMilestones",
      "url": "/repositories/{username}/{repo_slug}/milestones"
    },
    "listPermissions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        }
      },
      "returns": "PaginatedRepositoryPermissions",
      "url": "/user/permissions/repositories"
    },
    "listPipelineKnownHosts": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineKnownHosts",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/"
    },
    "listPipelines": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelines",
      "url": "/repositories/{username}/{repo_slug}/pipelines/"
    },
    "listPipelineScheduleExecutions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineScheduleExecutions",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}/executions/"
    },
    "listPipelineSchedules": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineSchedules",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/"
    },
    "listPipelineSteps": {
      "method": "GET",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineSteps",
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/steps/"
    },
    "listPipelineVariables": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineVariables",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/"
    },
    "listPublic": {
      "method": "GET",
      "params": {
        "after": {
          "in": "query",
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        }
      },
      "returns": "PaginatedRepositories",
      "url": "/repositories"
    },
    "listPullRequestComments": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPullrequestComments",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments"
    },
    "listPullRequests": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "state": {
          "enum": [
            "MERGED",
            "SUPERSEDED",
            "OPEN",
            "DECLINED"
          ],
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPullrequests",
      "url": "/repositories/{username}/{repo_slug}/pullrequests"
    },
    "listPullRequestStatuses": {
      "method": "GET",
      "params": {
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedCommitstatuses",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/statuses"
    },
    "listRefs": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedRefs",
      "url": "/repositories/{username}/{repo_slug}/refs"
    },
    "listTags": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedTags",
      "url": "/repositories/{username}/{repo_slug}/refs/tags"
    },
    "listVersions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedVersions",
      "url": "/repositories/{username}/{repo_slug}/versions"
    },
    "listWebhooks": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedWebhookSubscriptions",
      "url": "/repositories/{username}/{repo_slug}/hooks"
    },
    "mergePullRequest": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "PullrequestMergeParameters",
          "type": "any"
        },
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/merge"
    },
    "stopPipeline": {
      "method": "POST",
      "params": {
        "pipeline_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/pipelines/{pipeline_uuid}/stopPipeline"
    },
    "update": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Repository",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Repository",
      "url": "/repositories/{username}/{repo_slug}"
    },
    "updateBranchRestriction": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Branchrestriction",
          "type": "any"
        },
        "id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Branchrestriction",
      "url": "/repositories/{username}/{repo_slug}/branch-restrictions/{id}"
    },
    "updateCommitBuildStatus": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Commitstatus",
          "type": "any"
        },
        "key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Commitstatus",
      "url": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build/{key}"
    },
    "updateIssue": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Issue",
          "type": "any"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Issue",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}"
    },
    "updateIssueComment": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "IssueComment",
          "type": "any"
        },
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "issue_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "IssueComment",
      "url": "/repositories/{username}/{repo_slug}/issues/{issue_id}/comments/{comment_id}"
    },
    "updatePipelineBuildNumber": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineBuildNumber",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineBuildNumber",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/build_number"
    },
    "updatePipelineConfig": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelinesConfig",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelinesConfig",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config"
    },
    "updatePipelineKnownHost": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineKnownHost",
          "type": "any"
        },
        "known_host_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineKnownHost",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}"
    },
    "updatePipelineSchedule": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineSchedule",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "schedule_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSchedule",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}"
    },
    "updatePipelineSshKeyPair": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineSshKeyPair",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineSshKeyPair",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/ssh/key_pair"
    },
    "updatePipelineVariable": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/repositories/{username}/{repo_slug}/pipelines_config/variables/{variable_uuid}"
    },
    "updatePullRequest": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "schema": "Pullrequest",
          "type": "any"
        },
        "pull_request_id": {
          "in": "path",
          "required": true,
          "type": "integer"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Pullrequest",
      "url": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}"
    },
    "updateWebhook": {
      "method": "PUT",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/repositories/{username}/{repo_slug}/hooks/{uid}"
    }
  },
  "search": {
    "codeOfTeam": {
      "method": "GET",
      "params": {
        "page": {
          "in": "query",
          "type": "integer"
        },
        "pagelen": {
          "in": "query",
          "type": "integer"
        },
        "search_query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SearchResultPage",
      "url": "/teams/{username}/search/code"
    },
    "codeOfUser": {
      "method": "GET",
      "params": {
        "page": {
          "in": "query",
          "type": "integer"
        },
        "pagelen": {
          "in": "query",
          "type": "integer"
        },
        "search_query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SearchResultPage",
      "url": "/users/{username}/search/code"
    }
  },
  "snippets": {
    "checkWatch": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/watch"
    },
    "create": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Snippet",
          "type": "any"
        }
      },
      "returns": "Snippet",
      "url": "/snippets"
    },
    "createComment": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Snippet",
          "type": "any"
        },
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Snippet",
      "url": "/snippets/{username}/{encoded_id}/comments"
    },
    "createForUser": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Snippet",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Snippet",
      "url": "/snippets/{username}"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}"
    },
    "deleteComment": {
      "method": "DELETE",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/comments/{comment_id}"
    },
    "deleteRevision": {
      "method": "DELETE",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/{node_id}"
    },
    "get": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Snippet",
      "url": "/snippets/{username}/{encoded_id}"
    },
    "getAllCommitsForRevision": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "revision": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SnippetCommit",
      "url": "/snippets/{username}/{encoded_id}/commits/{revision}"
    },
    "getComment": {
      "method": "GET",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SnippetComment",
      "url": "/snippets/{username}/{encoded_id}/comments/{comment_id}"
    },
    "getDiff": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "query",
          "type": "string"
        },
        "revision": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/{revision}/diff"
    },
    "getFile": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/{node_id}/files/{path}"
    },
    "getPatch": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "revision": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/{revision}/patch"
    },
    "getRevision": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Snippet",
      "url": "/snippets/{username}/{encoded_id}/{node_id}"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "role": {
          "enum": [
            "owner",
            "contributor",
            "member"
          ],
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        }
      },
      "returns": "PaginatedSnippets",
      "url": "/snippets"
    },
    "listComments": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedSnippetComments",
      "url": "/snippets/{username}/{encoded_id}/comments"
    },
    "listCommits": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedSnippetCommit",
      "url": "/snippets/{username}/{encoded_id}/commits"
    },
    "listForUser": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "role": {
          "enum": [
            "owner",
            "contributor",
            "member"
          ],
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedSnippets",
      "url": "/snippets/{username}"
    },
    "listWatchers": {
      "method": "GET",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedUsers",
      "url": "/snippets/{username}/{encoded_id}/watchers"
    },
    "startWatch": {
      "method": "PUT",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/watch"
    },
    "stopWatch": {
      "method": "DELETE",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/watch"
    },
    "update": {
      "accepts": [
        "application/json",
        "multipart/related",
        "multipart/form-data"
      ],
      "method": "PUT",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Snippet",
      "url": "/snippets/{username}/{encoded_id}"
    },
    "updateComment": {
      "method": "PUT",
      "params": {
        "comment_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/snippets/{username}/{encoded_id}/comments/{comment_id}"
    },
    "updateRevision": {
      "accepts": [
        "application/json",
        "multipart/related",
        "multipart/form-data"
      ],
      "method": "PUT",
      "params": {
        "encoded_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "node_id": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Snippet",
      "url": "/snippets/{username}/{encoded_id}/{node_id}"
    }
  },
  "source": {
    "createFileCommit": {
      "accepts": [
        "multipart/form-data",
        "application/x-www-form-urlencoded"
      ],
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "author": {
          "in": "query",
          "type": "string"
        },
        "branch": {
          "in": "query",
          "type": "string"
        },
        "files": {
          "in": "query",
          "type": "string"
        },
        "message": {
          "in": "query",
          "type": "string"
        },
        "parents": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/src"
    },
    "get": {
      "method": "GET",
      "params": {
        "format": {
          "enum": [
            "meta",
            "rendered"
          ],
          "in": "query",
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedTreeentries",
      "url": "/repositories/{username}/{repo_slug}/src/{node}/{path}"
    },
    "getMainRoot": {
      "method": "GET",
      "params": {
        "format": {
          "enum": [
            "meta"
          ],
          "in": "query",
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedTreeentries",
      "url": "/repositories/{username}/{repo_slug}/src"
    },
    "listHistory": {
      "method": "GET",
      "params": {
        "fields": {
          "in": "query",
          "type": "string"
        },
        "node": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "path": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "q": {
          "in": "query",
          "type": "string"
        },
        "renames": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedFiles",
      "url": "/repositories/{username}/{repo_slug}/filehistory/{node}/{path}"
    }
  },
  "ssh": {
    "createKeyForUser": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "SshAccountKey",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SshAccountKey",
      "url": "/users/{username}/ssh-keys"
    },
    "deleteKeyForUser": {
      "method": "DELETE",
      "url": "/users/{username}/ssh-keys/{key_id}"
    },
    "getKeyForUser": {
      "method": "GET",
      "url": "/users/{username}/ssh-keys/{key_id}"
    },
    "listKeys": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedSshUserKeys",
      "url": "/users/{username}/ssh-keys"
    },
    "updateKeyForUser": {
      "method": "PUT",
      "url": "/users/{username}/ssh-keys/{key_id}"
    }
  },
  "teams": {
    "createPipelineVariable": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/teams/{username}/pipelines_config/variables/"
    },
    "createProject": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Project",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Project",
      "url": "/teams/{username}/projects/"
    },
    "createWebhook": {
      "method": "POST",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/teams/{username}/hooks"
    },
    "deletePipelineVariable": {
      "method": "DELETE",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "deleteProject": {
      "method": "DELETE",
      "params": {
        "project_key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/projects/{project_key}"
    },
    "deleteWebhook": {
      "method": "DELETE",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/hooks/{uid}"
    },
    "get": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Team",
      "url": "/teams/{username}"
    },
    "getAllMembers": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "User",
      "url": "/teams/{username}/members"
    },
    "getAllRepositories": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/repositories"
    },
    "getAllRepositoriesForUser": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/{username}/repositories"
    },
    "getPipelineVariable": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/teams/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "getProject": {
      "method": "GET",
      "params": {
        "project_key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Project",
      "url": "/teams/{username}/projects/{project_key}"
    },
    "getWebhook": {
      "method": "GET",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/teams/{username}/hooks/{uid}"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "role": {
          "enum": [
            "admin",
            "contributor",
            "member"
          ],
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        }
      },
      "returns": "PaginatedTeams",
      "url": "/teams"
    },
    "listFollowers": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedUsers",
      "url": "/teams/{username}/followers"
    },
    "listFollowing": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedUsers",
      "url": "/teams/{username}/following"
    },
    "listPipelineVariables": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineVariables",
      "url": "/teams/{username}/pipelines_config/variables/"
    },
    "listProjects": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedProjects",
      "url": "/teams/{username}/projects/"
    },
    "listRepositoryPermissions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedRepositoryPermissions",
      "url": "/teams/{username}/permissions/repositories"
    },
    "listTeamPermissions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedTeamPermissions",
      "url": "/teams/{username}/permissions"
    },
    "listWebhooks": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedWebhookSubscriptions",
      "url": "/teams/{username}/hooks"
    },
    "searchCode": {
      "method": "GET",
      "params": {
        "page": {
          "in": "query",
          "type": "integer"
        },
        "pagelen": {
          "in": "query",
          "type": "integer"
        },
        "search_query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SearchResultPage",
      "url": "/teams/{username}/search/code"
    },
    "updatePipelineVariable": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/teams/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "updateProject": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "Project",
          "type": "any"
        },
        "project_key": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "Project",
      "url": "/teams/{username}/projects/{project_key}"
    },
    "updateWebhook": {
      "method": "PUT",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/teams/{username}/hooks/{uid}"
    }
  },
  "user": {
    "get": {
      "method": "GET",
      "returns": "User",
      "url": "/user"
    },
    "getAllEmails": {
      "method": "GET",
      "url": "/user/emails"
    },
    "getEmail": {
      "method": "GET",
      "params": {
        "email": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/emails/{email}"
    },
    "listRepositoryPermissions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        }
      },
      "returns": "PaginatedRepositoryPermissions",
      "url": "/user/permissions/repositories"
    },
    "listTeamPermissions": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        }
      },
      "returns": "PaginatedTeamPermissions",
      "url": "/user/permissions/teams"
    }
  },
  "users": {
    "createPipelineVariable": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/users/{username}/pipelines_config/variables/"
    },
    "createSshKey": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "schema": "SshAccountKey",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SshAccountKey",
      "url": "/users/{username}/ssh-keys"
    },
    "createWebhook": {
      "method": "POST",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/users/{username}/hooks"
    },
    "deletePipelineVariable": {
      "method": "DELETE",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "deleteSshKey": {
      "method": "DELETE",
      "url": "/users/{username}/ssh-keys/{key_id}"
    },
    "deleteWebhook": {
      "method": "DELETE",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/{username}/hooks/{uid}"
    },
    "get": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "User",
      "url": "/users/{username}"
    },
    "getAllEmailsForAuthedUser": {
      "method": "GET",
      "url": "/user/emails"
    },
    "getAllRepositories": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/{username}/repositories"
    },
    "getAllRepositoriesForTeam": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/repositories"
    },
    "getAuthedUser": {
      "method": "GET",
      "returns": "User",
      "url": "/user"
    },
    "getEmailForAuthedUser": {
      "method": "GET",
      "params": {
        "email": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/user/emails/{email}"
    },
    "getPipelineVariable": {
      "method": "GET",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/users/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "getSshKey": {
      "method": "GET",
      "url": "/users/{username}/ssh-keys/{key_id}"
    },
    "getWebhook": {
      "method": "GET",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/users/{username}/hooks/{uid}"
    },
    "listFollowers": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedUsers",
      "url": "/users/{username}/followers"
    },
    "listFollowing": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedUsers",
      "url": "/users/{username}/following"
    },
    "listPipelineVariables": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedPipelineVariables",
      "url": "/users/{username}/pipelines_config/variables/"
    },
    "listSshKeys": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedSshUserKeys",
      "url": "/users/{username}/ssh-keys"
    },
    "listWebhooks": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedWebhookSubscriptions",
      "url": "/users/{username}/hooks"
    },
    "searchCode": {
      "method": "GET",
      "params": {
        "page": {
          "in": "query",
          "type": "integer"
        },
        "pagelen": {
          "in": "query",
          "type": "integer"
        },
        "search_query": {
          "in": "query",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "SearchResultPage",
      "url": "/users/{username}/search/code"
    },
    "updatePipelineVariable": {
      "method": "PUT",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "schema": "PipelineVariable",
          "type": "any"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "variable_uuid": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PipelineVariable",
      "url": "/users/{username}/pipelines_config/variables/{variable_uuid}"
    },
    "updateSshKey": {
      "method": "PUT",
      "url": "/users/{username}/ssh-keys/{key_id}"
    },
    "updateWebhook": {
      "method": "PUT",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/users/{username}/hooks/{uid}"
    }
  },
  "webhooks": {
    "create": {
      "method": "POST",
      "params": {
        "_body": {
          "in": "body",
          "required": true,
          "type": "any"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/repositories/{username}/{repo_slug}/hooks"
    },
    "createForTeam": {
      "method": "POST",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/teams/{username}/hooks"
    },
    "createForUser": {
      "method": "POST",
      "params": {
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/users/{username}/hooks"
    },
    "delete": {
      "method": "DELETE",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/repositories/{username}/{repo_slug}/hooks/{uid}"
    },
    "deleteForTeam": {
      "method": "DELETE",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/teams/{username}/hooks/{uid}"
    },
    "deleteForUser": {
      "method": "DELETE",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "url": "/users/{username}/hooks/{uid}"
    },
    "get": {
      "method": "GET",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/repositories/{username}/{repo_slug}/hooks/{uid}"
    },
    "getForTeam": {
      "method": "GET",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/teams/{username}/hooks/{uid}"
    },
    "getForUser": {
      "method": "GET",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/users/{username}/hooks/{uid}"
    },
    "list": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "subject_type": {
          "enum": [
            "user",
            "repository",
            "team"
          ],
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedHookEvents",
      "url": "/hook_events/{subject_type}"
    },
    "listForRepo": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedWebhookSubscriptions",
      "url": "/repositories/{username}/{repo_slug}/hooks"
    },
    "listForTeam": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedWebhookSubscriptions",
      "url": "/teams/{username}/hooks"
    },
    "listForUser": {
      "method": "GET",
      "params": {
        "q": {
          "in": "query",
          "type": "string"
        },
        "sort": {
          "in": "query",
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "PaginatedWebhookSubscriptions",
      "url": "/users/{username}/hooks"
    },
    "listSubjectTypes": {
      "method": "GET",
      "returns": "SubjectTypes",
      "url": "/hook_events"
    },
    "update": {
      "method": "PUT",
      "params": {
        "repo_slug": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/repositories/{username}/{repo_slug}/hooks/{uid}"
    },
    "updateForTeam": {
      "method": "PUT",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/teams/{username}/hooks/{uid}"
    },
    "updateForUser": {
      "method": "PUT",
      "params": {
        "uid": {
          "in": "path",
          "required": true,
          "type": "string"
        },
        "username": {
          "in": "path",
          "required": true,
          "type": "string"
        }
      },
      "returns": "WebhookSubscription",
      "url": "/users/{username}/hooks/{uid}"
    }
  }
}
